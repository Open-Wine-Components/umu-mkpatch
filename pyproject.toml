[build-system]
requires = ["maturin>=1.7,<2.0"]
build-backend = "maturin"

[project]
name = "umu-mkpatch"
requires-python = ">=3.11"
version = "0.1.4"
classifiers = [
    "Programming Language :: Rust",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = ["cbor2", "pyzstd", "xxhash"]

[tool.maturin]
python-source = "python"
features = ["pyo3/extension-module"]

[project.scripts]
umu-mkpatch = "umu_mkpatch:__main__.main"

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

line-length = 88
indent-width = 4

target-version = "py311"

[tool.ruff.lint]
select = [
    # Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
    # Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
    # McCabe complexity (`C901`) by default.
    "E4",
    "E7",
    "E9",
    "F",
    # Sort imports via isort
    "I",
    # Enforce PEP8 naming conventions
    "N",
    # Update our current syntax for the current Python version
    "UP",
    # Enforce type annotations in headers for functions and classes
    "ANN",
    # Do not catch blind exceptions
    "BLE",
    # Ensure we do not shadow Python built-in keywords
    "A",
    # Ensure we're being smart when returning values
    "RET",
    # Simplify logic
    "SIM",
    # Flag unused arguments
    "ARG",
    # Flag unused noqa
    "RUF100",
]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"

indent-style = "space"

skip-magic-trailing-comma = false

line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
